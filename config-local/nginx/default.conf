server {
	listen 80;

    # web-root; modified in the docker-composer.yml `phpfpm` container volume
	root /var/www/html/web;
	index index.php;

	location / {
		try_files $uri $uri/ /index.php?$args;
		proxy_read_timeout 150;
 
	}

	location ~ \.php$ {
		try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		include fastcgi_params;

		# local developing with docker-compose
		fastcgi_pass php-app:9000;

		# ecs use
		# fastcgi_pass localhost:9000;

		fastcgi_index index.php;
		fastcgi_send_timeout 6000;
		fastcgi_read_timeout 6000;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
	}

	# Prevent PHP scripts from being executed inside the uploads folder.
	location ~* /app/uploads/.*.php$ {
		deny all;
	}


	location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico||bz2|doc|xls|ppt|mid|midi|wav|bmp|rtf)$ {
		access_log off;	log_not_found off; expires max;

		add_header Access-Control-Allow-Origin *;
	}

	# This should match upload_max_filesize in php.ini

	#upload files size restriction
    location ~* ^.+\.(jpg|jpeg|gif) {
        client_max_body_size 6m;
    }

    location ~* \.(avi|mp4) {
        client_max_body_size 15m;
    }

	# Deny public access to wp-config.php
    location ~* wp-config.php {
        deny all;
    }

	# nginx block xmlrpc.php requests
    location /xmlrpc.php {
        deny all;
    }

	#articles
    location ~ ^/[\d+]/articles/(.*) {
    #   rewrite_log on;
        return 301 https://$host/?p=$1;
    }

    location ~ ^/[\d+]/item/(.*) {
    #   rewrite_log on;
        return 301 https://$host/?p=$1;
    }

	client_max_body_size 6m;

}
